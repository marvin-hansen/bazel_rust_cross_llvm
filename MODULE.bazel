module(
    name = "hello_cross",
    version = "0.0.0",
)

###############################################################################
# B A Z E L   D E P E N D E N C I E S # https://registry.bazel.build/
###############################################################################
bazel_dep(name = "aspect_bazel_lib", version = "2.9.4")
bazel_dep(name = "bazel_skylib", version = "1.7.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_apko", version = "1.4.0")
bazel_dep(name = "rules_rust", version = "0.54.1")
bazel_dep(name = "rules_pkg", version = "1.0.1")
bazel_dep(name = "rules_oci", version = "2.0.1")
bazel_dep(name = "toolchains_llvm", version = "1.2.0", dev_dependency = True)

# https://github.com/brainhivenl/libpq
bazel_dep(name = "libpq", version = "0.0.1")
git_override(
    module_name = "libpq",
    commit = "ebdeb0cc9b8e051779e00b37ec0f93fab9ba8dd8",
    remote = "https://github.com/brainhivenl/libpq",
)

###############################################################################
# LLVM toolchain #
###############################################################################

# INTEL/AMD64 Sysroot. LastModified: 2024-04-26T19:15
# https://commondatastorage.googleapis.com/chrome-linux-sysroot/
http_archive = use_repo_rule("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")
http_archive(
    name = "sysroot_linux_x64",
    build_file = "//build/sysroot:BUILD.bazel",
    sha256 = "5df5be9357b425cdd70d92d4697d07e7d55d7a923f037c22dc80a78e85842d2c",
    urls = ["https://commondatastorage.googleapis.com/chrome-linux-sysroot/toolchain/4f611ec025be98214164d4bf9fbe8843f58533f7/debian_bullseye_amd64_sysroot.tar.xz"],
)

# ARM 64 Sysroot. LastModified: 2024-04-26T18:33
# https://commondatastorage.googleapis.com/chrome-linux-sysroot/
http_archive(
    name = "sysroot_linux_aarch64",
    build_file = "//build/sysroot:BUILD.bazel",
    sha256 = "d303cf3faf7804c9dd24c9b6b167d0345d41d7fe4bfb7d34add3ab342f6a236c",
    urls = ["https://commondatastorage.googleapis.com/chrome-linux-sysroot/toolchain/906cc7c6bf47d4bd969a3221fc0602c6b3153caa/debian_bullseye_arm64_sysroot.tar.xz"],
)
# LLVM Versions and platforms
# https://github.com/bazel-contrib/toolchains_llvm/blob/master/toolchain/internal/llvm_distributions.bzl
llvm = use_extension("@toolchains_llvm//toolchain/extensions:llvm.bzl", "llvm", dev_dependency = True)
llvm.toolchain(
    name = "llvm_toolchain",
    llvm_version = "19.1.0", # Same LLVM version for all platforms
    stdlib = {
        "linux-x86_64" : "stdc++",
        "linux-aarch64": "stdc++",
    }
)
llvm.sysroot(
    name = "llvm_toolchain",
    label = "@sysroot_linux_x64//:sysroot",
    targets = ["linux-x86_64"],
)
llvm.sysroot(
    name = "llvm_toolchain",
    label = "@sysroot_linux_aarch64//:sysroot",
    targets = ["linux-aarch64"],
)
use_repo(llvm, "llvm_toolchain")

register_toolchains("@llvm_toolchain//:all", dev_dependency = True)


###############################################################################
# Rust toolchain #
###############################################################################
RUST_EDITION = "2021"  # NOTE: 2024 will be released with Rust 1.86.0

RUST_VERSION = "1.83.0"

# https://github.com/bazelbuild/rules_rust/releases
rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")
rust.toolchain(
    edition = RUST_EDITION,
    extra_target_triples = [
        "aarch64-unknown-linux-gnu",
        "x86_64-unknown-linux-gnu",
    ],
    versions = [RUST_VERSION],
)
use_repo(rust, "rust_toolchains")

register_toolchains("@rust_toolchains//:all")

# Rust dependencies vendored in:
# //thirdparty/BUILD.bazel

###############################################################################
# Apko toolchain for secure OCI base images
# https://github.com/chainguard-dev/rules_apko
###############################################################################
# Translate apko.lock.json to @base_image//:contents
# https://edu.chainguard.dev/open-source/build-tools/apko/bazel-rules/
apk = use_extension("@rules_apko//apko:extensions.bzl", "apko")
apk.translate_lock(
    name = "base_image",
    lock = "//images/base_image:apko.lock.json",
)
use_repo(apk, "base_image")